{"version":3,"file":"static/js/780.d7e8edee.chunk.js","mappings":"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","sources":["components/Cards/Circular.jsx","components/Cards/Trailer/Trailer.jsx","components/Cards/CardsByID/CardsByID.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import CircularProgress from '@mui/material/CircularProgress';\nimport { Box } from '@mui/material';\nimport Typography from '@mui/material/Typography';\n\nexport const CircularDeterminate = ({percent, size=\"45px\"}) => {\n  return (\n    <Box \n    sx={{ position: 'relative',\n    display: 'inline-flex',\n    backgroundColor:'#032541',\n    borderRadius:'50%',}}>\n    <CircularProgress \n    size={size}\n    sx={{borderRadius: 5,borderColor:'#032541'}}\n    variant=\"determinate\" \n    value={Math.round(percent * 10)}\n    color={ percent < 5\n      ? \"error\"\n      : percent < 7\n      ? \"warning\"\n      : \"success\"}\n    />\n    <Box\n      sx={{\n        top: 2,\n        left: 2.5,\n        bottom: 0,\n        right: 0,\n        position: 'absolute',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Typography sx={{fontSize:\"20px\", fontWeight:'800'}} variant=\"caption\" color=\"#fff\">\n        {`${Math.round(percent * 10)}%`}\n      </Typography>\n    </Box>\n  </Box>\n  );\n}","import { selectMovieTrailer } from \"components/redux/recipes/selector\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\n\n\nexport const Trailer = ({width, height,}) => {\n  const [trailerKey, setTrailerKey] = useState();\n  \n  const results = useSelector(selectMovieTrailer);\n\n  useEffect(() => {\n    const newTrailerKeys = results.map(({ results }) => {\n      return results\n        .filter(({ name }) => name.toLowerCase().includes('official'))\n        .map(({ key, name }) => ({ key, officialName: name }));\n    });\n\n    setTrailerKey(newTrailerKeys);\n  }, [results]);\n\n    return (\n      <>\n        {results && (\n          <div>\n            {trailerKey &&\n              trailerKey.map(e =>\n                e.slice(0, 1).map(({ key, name }) => {\n                  return (\n                    <div key={key}>\n                          <iframe\n                              width={width}\n                              height={height}\n                        title={name}\n                        src={`https://www.youtube.com/embed/${key}`}\n                      ></iframe>\n                    </div>\n                  );\n                })\n              )}\n          </div>\n        )}\n      </>\n    );\n}","import { Box, Button, Modal } from '@mui/material';\nimport { Container } from '@mui/material';\nimport {\n  getMovieCredits,\n  getMovieDetails,\n  getMovieReviews,\n  getMovieTrailer,\n} from 'components/redux/recipes/operation';\nimport {\n  selectMovieID,\n  selectMovieReviews,\n} from 'components/redux/recipes/selector';\nimport moment from 'moment/moment';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CircularDeterminate } from '../Circular';\nimport { Trailer } from '../Trailer/Trailer';\nimport { BsFillPlayFill } from 'react-icons/bs';\n\nimport {\n  BackdropPath,\n  Backdrop,\n  PosterPath,\n  Title,\n  Text,\n  TextTitle,\n  ModalBox,\n\n  ReviewsCards,\n  UserImage,\n} from './CardsByID.styled';\nimport randomColor from 'randomcolor';\nimport { Link, } from 'react-router-dom';\n\n// import { Reviews } from './Reviews/Reviews';\n\nfunction CardsByID({ id }) {\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n  const movieDetails = useSelector(selectMovieID);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => setOpen(false);\n\n  useEffect(() => {\n    dispatch(getMovieDetails(id));\n  }, [dispatch, id]);\n\n  useEffect(() => {\n    dispatch(getMovieTrailer(id));\n  }, [dispatch, id]);\n\n  useEffect(() => {\n    dispatch(getMovieReviews({ id }));\n  }, [dispatch, id]);\n\n  useEffect(() => {\n    dispatch(getMovieCredits(id));\n  }, [dispatch, id]);\n\n  const movieReviews = useSelector(selectMovieReviews);\n  // console.log(movieReviews);\n  const totalResults = movieReviews.map(({ total_results }) => total_results);\n  const results = movieReviews.map(({ results }) => results);\n\n  return (\n    <>\n      <section>\n        {Array.isArray(movieDetails) &&\n          movieDetails.map(\n            ({\n              backdrop_path,\n              original_title,\n              poster_path,\n              genres,\n              overview,\n              release_date,\n              vote_average,\n              id,\n              production_countries,\n              tagline,\n            }) => (\n              <div key={id}>\n                <Box\n                  sx={{\n                    width: '100%',\n                    height: '560px',\n                    position: 'relative',\n                    zIndex: 5,\n                  }}\n                >\n                  <Container\n                    style={{\n                      width: '1200px',\n\n                      position: 'relative',\n                      zIndex: 3,\n                    }}\n                  >\n                    <Box sx={{ display: 'flex', paddingTop: '20px' }}>\n                      <Box>\n                        <PosterPath\n                          src={\n                            poster_path\n                              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                              : 'Sorry, there is no picture here '\n                          }\n                          alt={original_title}\n                        />\n                      </Box>\n\n                      <Box sx={{ ml: 4 }}>\n                        <Box sx={{ display: 'flex' }}>\n                          <Title>{original_title}</Title>\n                          {release_date && (\n                            <TextTitle>({release_date.slice(0, 4)})</TextTitle>\n                          )}\n                        </Box>\n                        <Box sx={{ display: 'flex', gap: '15px' }}>\n                          <Text>\n                            {moment(release_date, 'YYYY-MM-DD').format(\n                              'DD.MM.YY'\n                            )}\n                          </Text>\n                          {production_countries &&\n                            production_countries.map(({ iso_3166_1, name }) => (\n                              <Text key={name}>({iso_3166_1}) </Text>\n                            ))}\n                          <Box\n                            sx={{\n                              display: 'flex',\n                              gap: '10px',\n                              flexWrap: 'wrap',\n                            }}\n                          >\n                            {genres &&\n                              genres.map(({ name, id }) => (\n                                <Text key={id}>| {name}</Text>\n                              ))}\n                          </Box>\n                        </Box>\n                        <Box\n                          sx={{\n                            display: 'flex',\n                            flexWrap: 'nowrap',\n                            alignItems: 'center',\n                            marginTop: ' 8px',\n                          }}\n                        >\n                          <CircularDeterminate\n                            percent={vote_average}\n                            size={60}\n                          />\n                          <Text\n                            style={{\n                              marginLeft: '10px',\n                              width: '90px',\n                              marginRight: '10px',\n                              fontSize: '20px',\n                              fontStyle: 'italic',\n                            }}\n                          >\n                            User evaluation\n                          </Text>\n                          <Button\n                            sx={{\n                              color: 'white',\n                              fontSize: '15px',\n                              fontStyle: 'italic',\n                            }}\n                            onClick={handleOpen}\n                          >\n                            <BsFillPlayFill\n                              style={{ width: '33px', height: '33px' }}\n                            />{' '}\n                            Open Trailer\n                          </Button>\n                          <Modal\n                            open={open}\n                            onClose={handleClose}\n                            aria-labelledby=\"modal-modal-title\"\n                            aria-describedby=\"modal-modal-description\"\n                          >\n                            {Array.isArray(movieDetails) && (\n                              <ModalBox>\n                                <Trailer width={1400} height={700} />\n                              </ModalBox>\n                            )}\n                          </Modal>\n                        </Box>\n                        <Text\n                          style={{\n                            marginTop: ' 8px',\n                            marginBottom: '0',\n                            fontSize: '20px',\n                            fontWeight: '400',\n                            fontStyle: 'italic',\n                            opacity: '0.7',\n                          }}\n                        >\n                          {tagline}\n                        </Text>\n                        <Text\n                          style={{\n                            fontWeight: '600',\n                            fontSize: '25px',\n                            marginTop: ' 8px',\n                            fontStyle: 'italic',\n                          }}\n                        >\n                          {' '}\n                          Descrition\n                        </Text>\n                        <Text\n                          style={{\n                            marginTop: ' 8px',\n                            marginBottom: '0',\n                            fontSize: '15px',\n                            fontWeight: '400',\n                            fontStyle: 'italic',\n                            width: '60%',\n                          }}\n                        >\n                          {overview}\n                        </Text>\n                      </Box>\n                    </Box>\n                  </Container>\n\n                  <Backdrop sx={{ position: 'absolute', top: 0 }} />\n                  <BackdropPath\n                    src={\n                      backdrop_path\n                        ? `https://image.tmdb.org/t/p/original/${backdrop_path}`\n                        : 'Sorry, there is no picture here '\n                    }\n                    alt={original_title}\n                  />\n                </Box>\n              </div>\n            )\n          )}\n      </section>\n      <section>\n        <h3> Socials reviews: {totalResults}</h3>\n        <div>\n          {results &&\n            results.map(e =>\n              e\n                .slice(0, 3)\n                .map(({ id, author, author_details, content, created_at }) => (\n                  <ReviewsCards key={`${id}-${author}`}>\n                    {author_details && (\n                      <UserImage\n                        style={{\n                          backgroundColor: `${randomColor({\n                            luminosity: 'dark',\n                            count: 1,\n                          })}`,\n                        }}\n                      >\n                        {author_details.username.slice(0, 1).toUpperCase()}\n                      </UserImage>\n                    )}\n                    <p style={{ color: 'black', width: '350px' }}>\n                      {content.slice(0, 75)}...\n                    </p>\n                    <p style={{ color: 'black' }}>\n                      {moment(created_at).format('LLLL')}\n                    </p>\n                  </ReviewsCards>\n                ))\n            )}\n          <Link to=\"reviews\"> Jump to all reviews</Link>\n        </div>\n      </section>\n\n      <section></section>\n    </>\n  );\n}\nexport default CardsByID;\n","import { useParams } from \"react-router-dom\"\nimport CardsByID from \"components/Cards/CardsByID/CardsByID\";\nconst MovieDetails = () => {\n  const { id } = useParams();\n\nreturn(\n    <CardsByID id={id}/>\n    )\n\n}\n\nexport default MovieDetails"],"names":["CircularDeterminate","percent","size","sx","position","display","backgroundColor","borderRadius","borderColor","variant","value","Math","round","color","top","left","bottom","right","alignItems","justifyContent","fontSize","fontWeight","Trailer","width","height","useState","trailerKey","setTrailerKey","results","useSelector","selectMovieTrailer","useEffect","newTrailerKeys","map","filter","name","toLowerCase","includes","key","officialName","e","slice","title","src","id","open","setOpen","dispatch","useDispatch","movieDetails","selectMovieID","handleOpen","handleClose","getMovieDetails","getMovieTrailer","getMovieReviews","getMovieCredits","movieReviews","selectMovieReviews","totalResults","total_results","Array","isArray","backdrop_path","original_title","poster_path","genres","overview","release_date","vote_average","production_countries","tagline","Box","zIndex","Container","style","paddingTop","alt","ml","gap","moment","format","iso_3166_1","flexWrap","marginTop","Circular","marginLeft","marginRight","fontStyle","Button","onClick","Modal","onClose","marginBottom","opacity","author","author_details","content","created_at","randomColor","luminosity","count","username","toUpperCase","to","useParams"],"sourceRoot":""}